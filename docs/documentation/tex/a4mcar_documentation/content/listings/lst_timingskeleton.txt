#!/usr/bin/env python
import psutil
import time
import string
import numpy

#Initialization
_DEADLINE = 1.40
_START_TIME = 0
_END_TIME = 0
_EXECUTION_TIME = 0                  
_PREV_SLACK_TIME = 0
_PERIOD = 1.40

def CreateTimingLog(filename):
	global _START_TIME
	global _DEADLINE
	global _END_TIME
	global _EXECUTION_TIME
	global _PREV_SLACK_TIME
	global _PERIOD
        
	try:
		file_obj = open(str(filename), "w+r")
	except Exception as inst:
		print inst
	_END_TIME = time.time()
	_EXECUTION_TIME = _END_TIME - _START_TIME
	try:
		file_obj.write(str(_PREV_SLACK_TIME)+' '+str(_EXECUTION_TIME)+' '+str(_PERIOD)+' '+str(_DEADLINE))
		file_obj.close()
	except Exception as inst:
		print inst
	
while True:
    #Timing Related
	_START_TIME = time.time()
	_PREV_SLACK_TIME = _START_TIME - _END_TIME

	#####
	#TASK CONTENT GOES HERE
	#####
		
	#Timing Related
	CreateTimingLog("deadline_logger_burn_cycles_around25_1.inc")

	#Sleep
	if(_PERIOD>_EXECUTION_TIME):
        	time.sleep(_PERIOD - _EXECUTION_TIME)
